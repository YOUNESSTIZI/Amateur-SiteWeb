import QuillType from 'quill';
import { QuillModules } from './quill-editor.interfaces';
import { AfterViewInit, ElementRef, OnChanges, Renderer2, SimpleChanges, NgZone } from '@angular/core';
import { CustomOption, CustomModule } from './quill-editor.interfaces';
import { QuillService } from './quill.service';
import * as ɵngcc0 from '@angular/core';
export declare class QuillViewComponent implements AfterViewInit, OnChanges {
    private platformId;
    private renderer;
    private elementRef;
    private zone;
    private service;
    quillEditor: QuillType;
    editorElem: HTMLElement;
    format?: 'object' | 'html' | 'text' | 'json';
    theme?: string;
    modules?: QuillModules;
    debug?: 'warn' | 'log' | 'error' | false;
    formats?: string[] | null;
    strict: boolean;
    content: any;
    customModules: CustomModule[];
    customOptions: CustomOption[];
    preserveWhitespace: boolean;
    constructor(platformId: any, renderer: Renderer2, elementRef: ElementRef, zone: NgZone, service: QuillService);
    valueSetter: (quillEditor: QuillType, value: any) => any;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<QuillViewComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<QuillViewComponent, "quill-view", never, {
    "strict": "strict";
    "customModules": "customModules";
    "customOptions": "customOptions";
    "preserveWhitespace": "preserveWhitespace";
    "format": "format";
    "theme": "theme";
    "modules": "modules";
    "debug": "debug";
    "formats": "formats";
    "content": "content";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpbGwtdmlldy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicXVpbGwtdmlldy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1aWxsVHlwZSBmcm9tICdxdWlsbCc7XG5pbXBvcnQgeyBRdWlsbE1vZHVsZXMgfSBmcm9tICcuL3F1aWxsLWVkaXRvci5pbnRlcmZhY2VzJztcbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEN1c3RvbU9wdGlvbiwgQ3VzdG9tTW9kdWxlIH0gZnJvbSAnLi9xdWlsbC1lZGl0b3IuaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBRdWlsbFNlcnZpY2UgfSBmcm9tICcuL3F1aWxsLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUXVpbGxWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgc2VydmljZTtcbiAgICBxdWlsbEVkaXRvcjogUXVpbGxUeXBlO1xuICAgIGVkaXRvckVsZW06IEhUTUxFbGVtZW50O1xuICAgIGZvcm1hdD86ICdvYmplY3QnIHwgJ2h0bWwnIHwgJ3RleHQnIHwgJ2pzb24nO1xuICAgIHRoZW1lPzogc3RyaW5nO1xuICAgIG1vZHVsZXM/OiBRdWlsbE1vZHVsZXM7XG4gICAgZGVidWc/OiAnd2FybicgfCAnbG9nJyB8ICdlcnJvcicgfCBmYWxzZTtcbiAgICBmb3JtYXRzPzogc3RyaW5nW10gfCBudWxsO1xuICAgIHN0cmljdDogYm9vbGVhbjtcbiAgICBjb250ZW50OiBhbnk7XG4gICAgY3VzdG9tTW9kdWxlczogQ3VzdG9tTW9kdWxlW107XG4gICAgY3VzdG9tT3B0aW9uczogQ3VzdG9tT3B0aW9uW107XG4gICAgcHJlc2VydmVXaGl0ZXNwYWNlOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKHBsYXRmb3JtSWQ6IGFueSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgem9uZTogTmdab25lLCBzZXJ2aWNlOiBRdWlsbFNlcnZpY2UpO1xuICAgIHZhbHVlU2V0dGVyOiAocXVpbGxFZGl0b3I6IFF1aWxsVHlwZSwgdmFsdWU6IGFueSkgPT4gYW55O1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiBQcm9taXNlPHZvaWQ+O1xufVxuIl19