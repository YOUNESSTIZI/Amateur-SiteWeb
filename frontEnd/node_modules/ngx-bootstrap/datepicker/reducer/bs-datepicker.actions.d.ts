import { TimeUnit } from 'ngx-bootstrap/chronos';
import { Action } from 'ngx-bootstrap/mini-ngrx';
import { BsDatepickerViewMode, BsViewNavigationEvent, CellHoverEvent, DatepickerRenderOptions, DatepickerDateCustomClasses } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerActions {
    static readonly CALCULATE = "[datepicker] calculate dates matrix";
    static readonly FORMAT = "[datepicker] format datepicker values";
    static readonly FLAG = "[datepicker] set flags";
    static readonly SELECT = "[datepicker] select date";
    static readonly NAVIGATE_OFFSET = "[datepicker] shift view date";
    static readonly NAVIGATE_TO = "[datepicker] change view date";
    static readonly SET_OPTIONS = "[datepicker] update render options";
    static readonly HOVER = "[datepicker] hover date";
    static readonly CHANGE_VIEWMODE = "[datepicker] switch view mode";
    static readonly SET_MIN_DATE = "[datepicker] set min date";
    static readonly SET_MAX_DATE = "[datepicker] set max date";
    static readonly SET_DAYSDISABLED = "[datepicker] set days disabled";
    static readonly SET_DATESDISABLED = "[datepicker] set dates disabled";
    static readonly SET_DATESENABLED = "[datepicker] set dates enabled";
    static readonly SET_IS_DISABLED = "[datepicker] set is disabled";
    static readonly SET_DATE_CUSTOM_CLASSES = "[datepicker] set date custom classes";
    static readonly SET_LOCALE = "[datepicker] set datepicker locale";
    static readonly SELECT_RANGE = "[daterangepicker] select dates range";
    calculate(): Action;
    format(): Action;
    flag(): Action;
    select(date: Date): Action;
    changeViewMode(event: BsDatepickerViewMode): Action;
    navigateTo(event: BsViewNavigationEvent): Action;
    navigateStep(step: TimeUnit): Action;
    setOptions(options: DatepickerRenderOptions): Action;
    selectRange(value: Date[]): Action;
    hoverDay(event: CellHoverEvent): Action;
    minDate(date: Date): Action;
    maxDate(date: Date): Action;
    daysDisabled(days: number[]): Action;
    datesDisabled(dates: Date[]): Action;
    datesEnabled(dates: Date[]): Action;
    isDisabled(value: boolean): Action;
    setDateCustomClasses(value: DatepickerDateCustomClasses[]): Action;
    setLocale(locale: string): Action;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerActions>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerActions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5hY3Rpb25zLmQudHMiLCJzb3VyY2VzIjpbImJzLWRhdGVwaWNrZXIuYWN0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpbWVVbml0IH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9jaHJvbm9zJztcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gJ25neC1ib290c3RyYXAvbWluaS1uZ3J4JztcbmltcG9ydCB7IEJzRGF0ZXBpY2tlclZpZXdNb2RlLCBCc1ZpZXdOYXZpZ2F0aW9uRXZlbnQsIENlbGxIb3ZlckV2ZW50LCBEYXRlcGlja2VyUmVuZGVyT3B0aW9ucywgRGF0ZXBpY2tlckRhdGVDdXN0b21DbGFzc2VzIH0gZnJvbSAnLi4vbW9kZWxzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJzRGF0ZXBpY2tlckFjdGlvbnMge1xuICAgIHN0YXRpYyByZWFkb25seSBDQUxDVUxBVEUgPSBcIltkYXRlcGlja2VyXSBjYWxjdWxhdGUgZGF0ZXMgbWF0cml4XCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IEZPUk1BVCA9IFwiW2RhdGVwaWNrZXJdIGZvcm1hdCBkYXRlcGlja2VyIHZhbHVlc1wiO1xuICAgIHN0YXRpYyByZWFkb25seSBGTEFHID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGZsYWdzXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFTEVDVCA9IFwiW2RhdGVwaWNrZXJdIHNlbGVjdCBkYXRlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IE5BVklHQVRFX09GRlNFVCA9IFwiW2RhdGVwaWNrZXJdIHNoaWZ0IHZpZXcgZGF0ZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBOQVZJR0FURV9UTyA9IFwiW2RhdGVwaWNrZXJdIGNoYW5nZSB2aWV3IGRhdGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX09QVElPTlMgPSBcIltkYXRlcGlja2VyXSB1cGRhdGUgcmVuZGVyIG9wdGlvbnNcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgSE9WRVIgPSBcIltkYXRlcGlja2VyXSBob3ZlciBkYXRlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IENIQU5HRV9WSUVXTU9ERSA9IFwiW2RhdGVwaWNrZXJdIHN3aXRjaCB2aWV3IG1vZGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX01JTl9EQVRFID0gXCJbZGF0ZXBpY2tlcl0gc2V0IG1pbiBkYXRlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9NQVhfREFURSA9IFwiW2RhdGVwaWNrZXJdIHNldCBtYXggZGF0ZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfREFZU0RJU0FCTEVEID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGRheXMgZGlzYWJsZWRcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBVEVTRElTQUJMRUQgPSBcIltkYXRlcGlja2VyXSBzZXQgZGF0ZXMgZGlzYWJsZWRcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBVEVTRU5BQkxFRCA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlcyBlbmFibGVkXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9JU19ESVNBQkxFRCA9IFwiW2RhdGVwaWNrZXJdIHNldCBpcyBkaXNhYmxlZFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfREFURV9DVVNUT01fQ0xBU1NFUyA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlIGN1c3RvbSBjbGFzc2VzXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9MT0NBTEUgPSBcIltkYXRlcGlja2VyXSBzZXQgZGF0ZXBpY2tlciBsb2NhbGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VMRUNUX1JBTkdFID0gXCJbZGF0ZXJhbmdlcGlja2VyXSBzZWxlY3QgZGF0ZXMgcmFuZ2VcIjtcbiAgICBjYWxjdWxhdGUoKTogQWN0aW9uO1xuICAgIGZvcm1hdCgpOiBBY3Rpb247XG4gICAgZmxhZygpOiBBY3Rpb247XG4gICAgc2VsZWN0KGRhdGU6IERhdGUpOiBBY3Rpb247XG4gICAgY2hhbmdlVmlld01vZGUoZXZlbnQ6IEJzRGF0ZXBpY2tlclZpZXdNb2RlKTogQWN0aW9uO1xuICAgIG5hdmlnYXRlVG8oZXZlbnQ6IEJzVmlld05hdmlnYXRpb25FdmVudCk6IEFjdGlvbjtcbiAgICBuYXZpZ2F0ZVN0ZXAoc3RlcDogVGltZVVuaXQpOiBBY3Rpb247XG4gICAgc2V0T3B0aW9ucyhvcHRpb25zOiBEYXRlcGlja2VyUmVuZGVyT3B0aW9ucyk6IEFjdGlvbjtcbiAgICBzZWxlY3RSYW5nZSh2YWx1ZTogRGF0ZVtdKTogQWN0aW9uO1xuICAgIGhvdmVyRGF5KGV2ZW50OiBDZWxsSG92ZXJFdmVudCk6IEFjdGlvbjtcbiAgICBtaW5EYXRlKGRhdGU6IERhdGUpOiBBY3Rpb247XG4gICAgbWF4RGF0ZShkYXRlOiBEYXRlKTogQWN0aW9uO1xuICAgIGRheXNEaXNhYmxlZChkYXlzOiBudW1iZXJbXSk6IEFjdGlvbjtcbiAgICBkYXRlc0Rpc2FibGVkKGRhdGVzOiBEYXRlW10pOiBBY3Rpb247XG4gICAgZGF0ZXNFbmFibGVkKGRhdGVzOiBEYXRlW10pOiBBY3Rpb247XG4gICAgaXNEaXNhYmxlZCh2YWx1ZTogYm9vbGVhbik6IEFjdGlvbjtcbiAgICBzZXREYXRlQ3VzdG9tQ2xhc3Nlcyh2YWx1ZTogRGF0ZXBpY2tlckRhdGVDdXN0b21DbGFzc2VzW10pOiBBY3Rpb247XG4gICAgc2V0TG9jYWxlKGxvY2FsZTogc3RyaW5nKTogQWN0aW9uO1xufVxuIl19