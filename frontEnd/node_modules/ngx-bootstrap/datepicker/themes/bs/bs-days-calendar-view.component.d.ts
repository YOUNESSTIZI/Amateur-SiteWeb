import { EventEmitter } from '@angular/core';
import { BsDatepickerViewMode, BsNavigationDirection, BsNavigationEvent, CellHoverEvent, DatepickerRenderOptions, DaysCalendarViewModel, DayViewModel, WeekViewModel } from '../../models';
import { BsDatepickerConfig } from '../../bs-datepicker.config';
import * as ɵngcc0 from '@angular/core';
export declare class BsDaysCalendarViewComponent {
    private _config;
    calendar: DaysCalendarViewModel;
    options: DatepickerRenderOptions;
    onNavigate: EventEmitter<BsNavigationEvent>;
    onViewMode: EventEmitter<BsDatepickerViewMode>;
    onSelect: EventEmitter<DayViewModel>;
    onHover: EventEmitter<CellHoverEvent>;
    onHoverWeek: EventEmitter<WeekViewModel>;
    isWeekHovered: boolean;
    constructor(_config: BsDatepickerConfig);
    navigateTo(event: BsNavigationDirection): void;
    changeViewMode(event: BsDatepickerViewMode): void;
    selectDay(event: DayViewModel): void;
    selectWeek(week: WeekViewModel): void;
    weekHoverHandler(cell: WeekViewModel, isHovered: boolean): void;
    hoverDay(cell: DayViewModel, isHovered: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDaysCalendarViewComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BsDaysCalendarViewComponent, "bs-days-calendar-view", never, {
    "calendar": "calendar";
    "options": "options";
}, {
    "onNavigate": "onNavigate";
    "onViewMode": "onViewMode";
    "onSelect": "onSelect";
    "onHover": "onHover";
    "onHoverWeek": "onHoverWeek";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF5cy1jYWxlbmRhci12aWV3LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJicy1kYXlzLWNhbGVuZGFyLXZpZXcuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyVmlld01vZGUsIEJzTmF2aWdhdGlvbkRpcmVjdGlvbiwgQnNOYXZpZ2F0aW9uRXZlbnQsIENlbGxIb3ZlckV2ZW50LCBEYXRlcGlja2VyUmVuZGVyT3B0aW9ucywgRGF5c0NhbGVuZGFyVmlld01vZGVsLCBEYXlWaWV3TW9kZWwsIFdlZWtWaWV3TW9kZWwgfSBmcm9tICcuLi8uLi9tb2RlbHMnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyQ29uZmlnIH0gZnJvbSAnLi4vLi4vYnMtZGF0ZXBpY2tlci5jb25maWcnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQnNEYXlzQ2FsZW5kYXJWaWV3Q29tcG9uZW50IHtcbiAgICBwcml2YXRlIF9jb25maWc7XG4gICAgY2FsZW5kYXI6IERheXNDYWxlbmRhclZpZXdNb2RlbDtcbiAgICBvcHRpb25zOiBEYXRlcGlja2VyUmVuZGVyT3B0aW9ucztcbiAgICBvbk5hdmlnYXRlOiBFdmVudEVtaXR0ZXI8QnNOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIG9uVmlld01vZGU6IEV2ZW50RW1pdHRlcjxCc0RhdGVwaWNrZXJWaWV3TW9kZT47XG4gICAgb25TZWxlY3Q6IEV2ZW50RW1pdHRlcjxEYXlWaWV3TW9kZWw+O1xuICAgIG9uSG92ZXI6IEV2ZW50RW1pdHRlcjxDZWxsSG92ZXJFdmVudD47XG4gICAgb25Ib3ZlcldlZWs6IEV2ZW50RW1pdHRlcjxXZWVrVmlld01vZGVsPjtcbiAgICBpc1dlZWtIb3ZlcmVkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKF9jb25maWc6IEJzRGF0ZXBpY2tlckNvbmZpZyk7XG4gICAgbmF2aWdhdGVUbyhldmVudDogQnNOYXZpZ2F0aW9uRGlyZWN0aW9uKTogdm9pZDtcbiAgICBjaGFuZ2VWaWV3TW9kZShldmVudDogQnNEYXRlcGlja2VyVmlld01vZGUpOiB2b2lkO1xuICAgIHNlbGVjdERheShldmVudDogRGF5Vmlld01vZGVsKTogdm9pZDtcbiAgICBzZWxlY3RXZWVrKHdlZWs6IFdlZWtWaWV3TW9kZWwpOiB2b2lkO1xuICAgIHdlZWtIb3ZlckhhbmRsZXIoY2VsbDogV2Vla1ZpZXdNb2RlbCwgaXNIb3ZlcmVkOiBib29sZWFuKTogdm9pZDtcbiAgICBob3ZlckRheShjZWxsOiBEYXlWaWV3TW9kZWwsIGlzSG92ZXJlZDogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=